name: Build otoge binaries

on:
  pull_request:
  push:
    branches:
      - 'main'
    paths:
      - '**'
      - '!data/**'
      - '!ui/**'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
    steps:
      - name: Checkout repository
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4

      - name: Resolve week ID
        run: |
          echo "WEEK_ID=$(date +%Y.%W)" >> "$GITHUB_ENV"

      - name: Cache rustup directory
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
        with:
          path: ~/.rustup
          key: rustup-${{ runner.os }}-${{ env.WEEK_ID }}
          restore-keys: |
            rustup-${{ runner.os }}-

      - name: Install Rust stable
        run: |
          rustup update
          rustup toolchain install stable --profile minimal
          echo "RUSTC_HASH=$(rustc --version | sed 's/^.*(\(.*\))$/\1/' | awk '{ printf $1 }')" >> "$GITHUB_ENV"

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@8417cffc2ec64127ad83077aceaa8631f7cdc83e # v0.0.3

      - name: Cache cargo registry
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
        with:
          path: |
            ~/.cargo/registry
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Build otoge
        run: cargo build --release

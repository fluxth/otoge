name: Build otoge binaries

on:
  push:
    branches:
      - 'main'
    paths:
      - '**'
      - '!data/**'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3

      - name: Resolve week ID
        run: |
          echo "WEEK_ID=$(date +%Y.%W)" >> "$GITHUB_ENV"

      - name: Cache rustup directory
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3
        with:
          path: ~/.rustup
          key: rustup-${{ runner.os }}-${{ env.WEEK_ID }}
          restore-keys: |
            rustup-${{ runner.os }}-

      - name: Install Rust stable
        run: |
          rustup update
          rustup toolchain install stable --profile minimal
          echo "RUSTC_HASH=$(rustc --version | sed 's/^.*(\(.*\))$/\1/' | awk '{ printf $1 }')" >> "$GITHUB_ENV"

      - name: Cache cargo registry
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3
        with:
          path: |
            ~/.cargo/registry
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Cache rust target directory
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3
        with:
          path: target
          key:
            rusttarget-${{ runner.os }}-${{ env.RUSTC_HASH }}-${{ github.sha }}
          restore-keys: |
            rusttarget-${{ runner.os }}-${{ env.RUSTC_HASH }}-
            rusttarget-${{ runner.os }}-

      - name: Build otoge
        run: cargo build --release
